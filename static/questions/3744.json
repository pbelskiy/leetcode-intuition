{
  "questionId": "3865",
  "title": "Find Product Recommendation Pairs",
  "content": "<p>Table: <code>ProductPurchases</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type | \n+-------------+------+\n| user_id     | int  |\n| product_id  | int  |\n| quantity    | int  |\n+-------------+------+\n(user_id, product_id) is the unique key for this table.\nEach row represents a purchase of a product by a user in a specific quantity.\n</pre>\n\n<p>Table: <code>ProductInfo</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    | \n+-------------+---------+\n| product_id  | int     |\n| category    | varchar |\n| price       | decimal |\n+-------------+---------+\nproduct_id is the primary key for this table.\nEach row assigns a category and price to a product.\n</pre>\n\n<p>Amazon wants to implement the <strong>Customers who bought this also bought...</strong> feature based on <strong>co-purchase patterns</strong>. Write a solution to :</p>\n\n<ol>\n\t<li>Identify <strong>distinct</strong> product pairs frequently <strong>purchased together by the same customers</strong> (where <code>product1_id</code> &lt; <code>product2_id</code>)</li>\n\t<li>For <strong>each product pair</strong>, determine how many customers purchased <strong>both</strong> products</li>\n</ol>\n\n<p><strong>A product pair </strong>is considered for recommendation <strong>if</strong> <strong>at least</strong> <code>3</code> <strong>different</strong> customers have purchased <strong>both products</strong>.</p>\n\n<p>Return <em>the </em><em>result table ordered by <strong>customer_count</strong> in <strong>descending</strong> order, and in case of a tie, by </em><code>product1_id</code><em> in <strong>ascending</strong> order, and then by </em><code>product2_id</code><em> in <strong>ascending</strong> order</em>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong></p>\n\n<p>ProductPurchases table:</p>\n\n<pre class=\"example-io\">\n+---------+------------+----------+\n| user_id | product_id | quantity |\n+---------+------------+----------+\n| 1       | 101        | 2        |\n| 1       | 102        | 1        |\n| 1       | 103        | 3        |\n| 2       | 101        | 1        |\n| 2       | 102        | 5        |\n| 2       | 104        | 1        |\n| 3       | 101        | 2        |\n| 3       | 103        | 1        |\n| 3       | 105        | 4        |\n| 4       | 101        | 1        |\n| 4       | 102        | 1        |\n| 4       | 103        | 2        |\n| 4       | 104        | 3        |\n| 5       | 102        | 2        |\n| 5       | 104        | 1        |\n+---------+------------+----------+\n</pre>\n\n<p>ProductInfo table:</p>\n\n<pre class=\"example-io\">\n+------------+-------------+-------+\n| product_id | category    | price |\n+------------+-------------+-------+\n| 101        | Electronics | 100   |\n| 102        | Books       | 20    |\n| 103        | Clothing    | 35    |\n| 104        | Kitchen     | 50    |\n| 105        | Sports      | 75    |\n+------------+-------------+-------+\n</pre>\n\n<p><strong>Output:</strong></p>\n\n<pre class=\"example-io\">\n+-------------+-------------+-------------------+-------------------+----------------+\n| product1_id | product2_id | product1_category | product2_category | customer_count |\n+-------------+-------------+-------------------+-------------------+----------------+\n| 101         | 102         | Electronics       | Books             | 3              |\n| 101         | 103         | Electronics       | Clothing          | 3              |\n| 102         | 104         | Books             | Kitchen           | 3              |\n+-------------+-------------+-------------------+-------------------+----------------+\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li><strong>Product pair (101, 102):</strong>\n\n\t<ul>\n\t\t<li>Purchased by users 1, 2, and 4 (3 customers)</li>\n\t\t<li>Product 101 is in Electronics category</li>\n\t\t<li>Product 102 is in Books category</li>\n\t</ul>\n\t</li>\n\t<li><strong>Product pair (101, 103):</strong>\n\t<ul>\n\t\t<li>Purchased by users 1, 3, and 4 (3 customers)</li>\n\t\t<li>Product 101 is in Electronics category</li>\n\t\t<li>Product 103 is in Clothing category</li>\n\t</ul>\n\t</li>\n\t<li><strong>Product pair (102, 104):</strong>\n\t<ul>\n\t\t<li>Purchased by users 2, 4, and 5 (3 customers)</li>\n\t\t<li>Product 102 is in Books category</li>\n\t\t<li>Product 104 is in Kitchen category</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>The result is ordered by customer_count in descending order. For pairs with the same customer_count, they are ordered by product1_id and then product2_id in ascending order.</p>\n</div>\n",
  "difficulty": "Medium",
  "topicTags": [
    {
      "name": "Database",
      "slug": "database"
    }
  ]
}
{
  "questionId": "3722",
  "title": "Sum of K Subarrays With Length at Least M",
  "content": "<p>You are given an integer array <code>nums</code> and two integers, <code>k</code> and <code>m</code>.</p>\n\n<p>Return the <strong>maximum</strong> sum of <code>k</code> non-overlapping <span data-keyword=\"subarray\">subarrays</span> of <code>nums</code>, where each subarray has a length of <strong>at least</strong> <code>m</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,-1,3,3,4], k = 2, m = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">13</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The optimal choice is:</p>\n\n<ul>\n\t<li>Subarray <code>nums[3..5]</code> with sum <code>3 + 3 + 4 = 10</code> (length is <code>3 &gt;= m</code>).</li>\n\t<li>Subarray <code>nums[0..1]</code> with sum <code>1 + 2 = 3</code> (length is <code>2 &gt;= m</code>).</li>\n</ul>\n\n<p>The total sum is <code>10 + 3 = 13</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [-10,3,-1,-2], k = 4, m = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-10</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The optimal choice is choosing each element as a subarray. The output is <code>(-10) + 3 + (-1) + (-2) = -10</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= floor(nums.length / m)</code></li>\n\t<li><code>1 &lt;= m &lt;= 3</code></li>\n</ul>\n",
  "difficulty": "Medium",
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Prefix Sum",
      "slug": "prefix-sum"
    }
  ]
}